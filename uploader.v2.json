{
    "commands": [
        {
            "command": "/sbin/blkid -c /dev/null",
            "pattern": [],
            "symbolic_name": "blkid"
        },
        {
            "command": "/usr/sbin/brctl show",
            "pattern": [],
            "symbolic_name": "brctl_show"
        },
        {
            "command": "/usr/bin/ceph health detail -f json-pretty",
            "pattern": [],
            "symbolic_name": "ceph_health_detail"
        },
        {
            "command": "/usr/bin/ceph osd dump -f json-pretty",
            "pattern": [],
            "symbolic_name": "ceph_osd_dump"
        },
        {
            "command": "/usr/bin/ceph osd tree -f json-pretty",
            "pattern": [],
            "symbolic_name": "ceph_osd_tree"
        },
        {
            "command": "/usr/bin/ceph -s -f json-pretty",
            "pattern": [],
            "symbolic_name": "ceph_s"
        },
        {
            "command": "/usr/bin/ceph -v",
            "pattern": [],
            "symbolic_name": "ceph_v"
        },
        {
            "command": "/usr/bin/find /etc/origin/node /etc/origin/master /etc/pki -type f -exec /usr/bin/openssl x509 -noout -enddate -in '{}' \\; -exec echo 'FileName= {}' \\;",
            "pattern": [],
            "symbolic_name": "certificates_enddate"
        },
        {
            "command": "/sbin/chkconfig --list",
            "pattern": [],
            "symbolic_name": "chkconfig"
        },
        {
            "command": "/usr/bin/chronyc sources",
            "pattern": [],
            "symbolic_name": "chronyc_sources"
        },
        {
            "command": "/bin/date",
            "pattern": [],
            "symbolic_name": "date"
        },
        {
            "command": "/bin/date --utc",
            "pattern": [],
            "symbolic_name": "date_utc"
        },
        {
            "command": "/sbin/dcbtool gc  dcb",
            "pattern": [],
            "pre_command": "iface",
            "symbolic_name": "dcbtool_gc_dcb"
        },
        {
            "command": "/bin/df -al",
            "pattern": [],
            "symbolic_name": "df__al"
        },
        {
            "command": "/bin/df -alP",
            "pattern": [],
            "symbolic_name": "df__alP"
        },
        {
            "command": "/bin/df -li",
            "pattern": [],
            "symbolic_name": "df__li"
        },
        {
            "command": "/usr/bin/dig +dnssec . SOA",
            "pattern": [],
            "symbolic_name": "dig_dnssec"
        },
        {
            "command": "/usr/bin/dig +edns=0 . SOA",
            "pattern": [],
            "symbolic_name": "dig_edns"
        },
        {
            "command": "/usr/bin/dig +noedns . SOA",
            "pattern": [],
            "symbolic_name": "dig_noedns"
        },
        {
            "command": "/bin/dmesg",
            "pattern": [
                "CSUM",
                "CVE-2017-1000364",
                "Dropping TSO",
                "EDAC ",
                "FEATURE IBPB_SUPPORT",
                "FEATURE SPEC_CTRL",
                "Kernel page table isolation",
                "Linux version",
                "NUMA: ",
                "SMBIOS ",
                "WRITE SAME failed. Manually zeroing",
                "blocked FC remote port time out",
                "crashkernel reservation failed",
                "crashkernel=auto resulted in zero bytes of reserved memory",
                "is now offline",
                "ixgbevf: Unknown parameter `InterruptThrottleRate'",
                "mce: ",
                "netconsole: network logging started",
                "vpd r/w failed",
                "x86/pti"
            ],
            "symbolic_name": "dmesg"
        },
        {
            "command": "/usr/sbin/dmidecode",
            "pattern": [],
            "symbolic_name": "dmidecode"
        },
        {
            "command": "/usr/sbin/dmsetup info -C",
            "pattern": [],
            "symbolic_name": "dmsetup_info"
        },
        {
            "command": "/usr/bin/docker info",
            "pattern": [],
            "symbolic_name": "docker_info"
        },
        {
            "command": "/usr/bin/docker ps --all --no-trunc",
            "pattern": [],
            "symbolic_name": "docker_list_containers"
        },
        {
            "command": "/usr/bin/docker images --all --no-trunc --digests",
            "pattern": [],
            "symbolic_name": "docker_list_images"
        },
        {
            "command": "/sbin/ethtool",
            "pattern": [],
            "pre_command": "iface",
            "symbolic_name": "ethtool"
        },
        {
            "command": "/sbin/ethtool -S",
            "pattern": [],
            "pre_command": "iface",
            "symbolic_name": "ethtool_S"
        },
        {
            "command": "/sbin/ethtool -g",
            "pattern": [],
            "pre_command": "iface",
            "symbolic_name": "ethtool_g"
        },
        {
            "command": "/sbin/ethtool -i",
            "pattern": [],
            "pre_command": "iface",
            "symbolic_name": "ethtool_i"
        },
        {
            "command": "/sbin/ethtool -k",
            "pattern": [],
            "pre_command": "iface",
            "symbolic_name": "ethtool_k"
        },
        {
            "command": "/usr/bin/facter",
            "pattern": [],
            "symbolic_name": "facter"
        },
        {
            "command": "/bin/fc-match -sv 'sans:regular:roman' family fontformat",
            "pattern": [],
            "symbolic_name": "fc_match"
        },
        {
            "command": "/usr/bin/getcert list",
            "pattern": [],
            "symbolic_name": "getcert_list"
        },
        {
            "command": "/usr/sbin/getenforce",
            "pattern": [],
            "symbolic_name": "getenforce"
        },
        {
            "command": "/usr/sbin/getsebool -a",
            "pattern": [],
            "symbolic_name": "getsebool"
        },
        {
            "command": "/bin/ls -l /boot/grub/grub.conf",
            "pattern": [],
            "symbolic_name": "grub1_config_perms"
        },
        {
            "command": "/bin/ls -l /boot/grub2/grub.cfg",
            "pattern": [],
            "symbolic_name": "grub_config_perms"
        },
        {
            "command": "/usr/sbin/grubby --default-index",
            "pattern": [],
            "symbolic_name": "grubby_default_index"
        },
        {
            "command": "/usr/bin/crontab -l -u heat",
            "pattern": [
                "heat-manage"
            ],
            "symbolic_name": "heat_crontab"
        },
        {
            "command": "/bin/hostname -f",
            "pattern": [],
            "symbolic_name": "hostname"
        },
        {
            "command": "/usr/sbin/httpd -V",
            "pattern": [],
            "symbolic_name": "httpd_V"
        },
        {
            "command": "/usr/sbin/httpd.event -V",
            "pattern": [],
            "symbolic_name": "httpd_event_V"
        },
        {
            "command": "/usr/sbin/httpd.worker -V",
            "pattern": [],
            "symbolic_name": "httpd_worker_V"
        },
        {
            "command": "/usr/sbin/httpd -M",
            "pattern": [],
            "symbolic_name": "httpd_M"
        },
        {
            "command": "/bin/rpm -qa --root={CONTAINER_MOUNT_POINT} --qf='%{NAME}-%{VERSION}-%{RELEASE}.%{ARCH}\t%{INSTALLTIME:date}\t%{BUILDTIME}\t%{VENDOR}\t%{BUILDHOST}\tDUMMY\t%{SIGPGP:pgpsig}\n'",
            "pattern": [],
            "symbolic_name": "installed_rpms",
            "image": true
        },
        {
            "command": "/sbin/ip -s link",
            "pattern": [],
            "symbolic_name": "ip_s_link"
        },
        {
            "command": "/sbin/ip6tables-save",
            "pattern": [],
            "symbolic_name": "ip6tables"
        },
        {
            "command": "/sbin/ip addr",
            "pattern": [],
            "symbolic_name": "ip_addr"
        },
        {
            "command": "/sbin/ip route show table all",
            "pattern": [],
            "symbolic_name": "ip_route_show_table_all"
        },
        {
            "command": "/usr/bin/ipcs -s",
            "pattern": [],
            "symbolic_name": "ipcs_s"
        },
        {
            "command": "/sbin/iptables-save",
            "pattern": [],
            "symbolic_name": "iptables"
        },
        {
            "command": "/sbin/ip -4 neighbor show nud all",
            "pattern": [],
            "symbolic_name": "ipv4_neigh"
        },
        {
            "command": "/sbin/ip -6 neighbor show nud all",
            "pattern": [],
            "symbolic_name": "ipv6_neigh"
        },
        {
            "command": "/usr/sbin/iscsiadm -m session",
            "pattern": [],
            "symbolic_name": "iscsiadm_m_session"
        },
        {
            "command": "/usr/bin/crontab -l -u keystone",
            "pattern": [
                "heat-manage",
                "keystone-manage"
            ],
            "symbolic_name": "keystone_crontab"
        },
        {
            "command": "/usr/bin/find -L /lib /lib64 -name 'libkeyutils.so*'",
            "pattern": [],
            "symbolic_name": "libkeyutils"
        },
        {
            "command": "/usr/bin/find -L /lib /lib64 -name libkeyutils.so.1 -exec objdump -x \"{}\" \\;",
            "pattern": [],
            "symbolic_name": "libkeyutils_objdumps"
        },
        {
            "command": "/usr/bin/file -L /etc/localtime",
            "pattern": [],
            "symbolic_name": "localtime"
        },
        {
            "command": "/usr/bin/lpstat -p",
            "pattern": [],
            "symbolic_name": "lpstat_p"
        },
        {
            "command": "/bin/ls -lanR /boot",
            "pattern": [],
            "symbolic_name": "ls_boot"
        },
        {
            "command": "/bin/ls -lanR /dev",
            "pattern": [],
            "symbolic_name": "ls_dev"
        },
        {
            "command": "/bin/ls -lanR /dev/disk",
            "pattern": [],
            "symbolic_name": "ls_disk"
        },
        {
            "command": "/bin/ls -lanR /var/lib/docker/volumes",
            "pattern": [],
            "symbolic_name": "ls_docker_volumes"
        },
        {
            "command": "/bin/ls -lanR /etc",
            "pattern": [],
            "symbolic_name": "ls_etc"
        },
        {
            "command": "/bin/ls -lanR /lib/firmware",
            "pattern": [],
            "symbolic_name": "ls_lib_firmware"
        },
        {
            "command": "/bin/ls -lanR /sys/firmware",
            "pattern": [],
            "symbolic_name": "ls_sys_firmware"
        },
        {
            "command": "/bin/ls -la /var/lib/mongodb",
            "pattern": [],
            "symbolic_name": "ls_var_lib_mongodb"
        },
        {
            "command": "/bin/ls -ln /usr/sbin",
            "pattern": [
                "postdrop",
                "total"
            ],
            "symbolic_name": "ls_usr_sbin"
        },
        {
            "command": "/bin/ls -la /var/log /var/log/audit",
            "pattern": [],
            "symbolic_name": "ls_var_log"
        },
        {
            "command": "/bin/ls -la /dev/null /var/www",
            "pattern": [],
            "symbolic_name": "ls_var_www"
        },
        {
            "command": "/bin/ls -lnL /var/run",
            "pattern": [],
            "symbolic_name": "ls_var_run"
        },
        {
            "command": "/bin/ls -ln /var/spool/postfix/maildrop",
            "pattern": [],
            "symbolic_name": "ls_var_spool_postfix_maildrop"
        },
        {
            "command": "/bin/ls -ln /var/spool/clientmqueue",
            "pattern": [],
            "symbolic_name": "ls_var_spool_clientmq"
        },
        {
            "command": "/bin/ls -l /var/lib/cni/networks/openshift-sdn",
            "pattern": [],
            "symbolic_name": "ls_ocp_cni_openshift_sdn"
        },
        {
            "command": "/bin/ls -lan /",
            "pattern": [],
            "symbolic_name": "ls_osroot"
        },
        {
            "command": "/bin/ls -ln /var/tmp",
            "pattern": [
                "/var/tmp",
                "foreman-ssh-cmd"
            ],
            "symbolic_name": "ls_var_tmp"
        },
        {
            "command": "/bin/lsblk",
            "pattern": [],
            "symbolic_name": "lsblk"
        },
        {
            "command": "/bin/lsblk -P -o NAME,KNAME,MAJ:MIN,FSTYPE,MOUNTPOINT,LABEL,UUID,RA,RO,RM,MODEL,SIZE,STATE,OWNER,GROUP,MODE,ALIGNMENT,MIN-IO,OPT-IO,PHY-SEC,LOG-SEC,ROTA,SCHED,RQ-SIZE,TYPE,DISC-ALN,DISC-GRAN,DISC-MAX,DISC-ZERO",
            "pattern": [],
            "symbolic_name": "lsblk_pairs"
        },
        {
            "command": "/sbin/lsmod",
            "pattern": [],
            "symbolic_name": "lsmod"
        },
        {
            "command": "/usr/sbin/lsof",
            "pattern": [
                "(deleted)",
                "/var/log/journal",
                "COMMAND",
                "libcrypto",
                "libssl",
                "libssl.so",
                "lsnrctl",
                "oracle",
                "tnslsnr"
            ],
            "symbolic_name": "lsof"
        },
        {
            "command": "/sbin/lspci -k",
            "pattern": [],
            "symbolic_name": "lspci"
        },
        {
            "command": "/sbin/lspci -k",
            "pattern": [],
            "symbolic_name": "lspci_kernel"
        },
        {
            "command": "/usr/sap/hostctrl/exe/lssap",
            "pattern": [],
            "symbolic_name": "lssap"
        },
        {
            "command": "/usr/sap/hostctrl/exe/saphostctrl -function GetCIMObject -enuminstances SAPInstance",
            "pattern": [
                "******",
                "CreationClassName",
                "Hostname",
                "InstanceName",
                "SID",
                "SapVersionInfo",
                "SystemNumber"
            ],
            "symbolic_name": "saphostctl_getcimobject_sapinstance"
        },
        {
            "command": "/usr/sap/hostctrl/exe/saphostexec -status",
            "pattern": [],
            "symbolic_name": "saphostexec_status"
        },
        {
            "command": "/usr/sap/hostctrl/exe/saphostexec -version",
            "pattern": [],
            "symbolic_name": "saphostexec_version"
        },
        {
            "command": "/usr/bin/lsscsi",
            "pattern": [],
            "symbolic_name": "lsscsi"
        },
        {
            "command": "/sbin/lvs --nameprefixes --noheadings --separator='|' -a -o lv_name,lv_size,lv_attr,mirror_log,vg_name,devices,region_size,data_percent,metadata_percent,segtype --config=\"global{locking_type=0}\"",
            "pattern": [],
            "symbolic_name": "lvs_noheadings"
        },
        {
            "command": "/usr/bin/find /sys/bus/pci/devices/*/mlx4_port[0-9] -print -exec cat {} \\;",
            "pattern": [],
            "symbolic_name": "mlx4_port"
        },
        {
            "command": "/bin/mount",
            "pattern": [],
            "symbolic_name": "mount"
        },
        {
            "command": "/usr/bin/find /sys/devices/virtual/net/ -name multicast_querier -print -exec cat {} \\;",
            "pattern": [],
            "symbolic_name": "multicast_querier"
        },
        {
            "command": "/sbin/multipath -v4 -ll",
            "pattern": [],
            "symbolic_name": "multipath__v4__ll"
        },
        {
            "command": "/bin/lsinitrd -f /etc/multipath.conf",
            "pattern": [],
            "symbolic_name": "multipath_conf_initramfs"
        },
        {
            "command": "/bin/mysqladmin variables",
            "pattern": [],
            "symbolic_name": "mysqladmin_vars"
        },
        {
            "command": "/usr/sbin/named-checkconf -p",
            "pattern": [
                "DNSSEC-ENABLE",
                "Dnssec-Enable",
                "dnssec-enable"
            ],
            "symbolic_name": "named_checkconf_p"
        },
        {
            "command": "/bin/netstat -neopa",
            "pattern": [],
            "symbolic_name": "netstat"
        },
        {
            "command": "/bin/netstat -i",
            "pattern": [],
            "symbolic_name": "netstat_i"
        },
        {
            "command": "/bin/netstat -s",
            "pattern": [],
            "symbolic_name": "netstat_s"
        },
        {
            "command": "/bin/netstat -agn",
            "pattern": [],
            "symbolic_name": "netstat__agn"
        },
        {
            "command": "/usr/bin/crontab -l -u nova",
            "pattern": [],
            "symbolic_name": "nova_crontab"
        },
        {
            "command": "/usr/sbin/ntpq -c 'rv 0 leap'",
            "pattern": [],
            "symbolic_name": "ntpq_leap"
        },
        {
            "command": "/usr/sbin/ntpq -pn",
            "pattern": [],
            "symbolic_name": "ntpq_pn"
        },
        {
            "command": "/usr/sbin/ntptime",
            "pattern": [],
            "symbolic_name": "ntptime"
        },
        {
            "command": "/bin/grep -c '^[[:digit:]]' /etc/passwd /etc/group",
            "pattern": [],
            "symbolic_name": "numeric_user_group_name"
        },
        {
            "command": "/usr/bin/ovs-vsctl -t 5 get Open_vSwitch . other_config",
            "pattern": [],
            "symbolic_name": "openvswitch_other_config"
        },
        {
            "command": "/usr/bin/ovs-vsctl show",
            "pattern": [],
            "symbolic_name": "ovs_vsctl_show"
        },
        {
            "command": "/usr/sbin/pcs status",
            "pattern": [],
            "symbolic_name": "pcs_status"
        },
        {
            "command": "/bin/ps aux",
            "pattern": [
                "/usr/bin/docker",
                "/usr/bin/docker daemon",
                "/usr/bin/docker-current",
                "/usr/bin/docker-current daemon",
                "/usr/bin/dockerd-current",
                "/usr/bin/openshift start master",
                "/usr/bin/openshift start node",
                "COMMAND",
                "STAP/8.2",
                "ceph-osd",
                "chronyd",
                "mysqld",
                "ntpd",
                "openshift start master api",
                "openshift start master controllers",
                "phc2sys",
                "postgres",
                "ptp4l",
                "tomcat"
            ],
            "symbolic_name": "ps_aux"
        },
        {
            "command": "/bin/ps auxcww",
            "pattern": [],
            "symbolic_name": "ps_auxcww"
        },
        {
            "command": "/bin/ps auxww",
            "pattern": [
                "/sbin/multipathd",
                "/usr/bin/celery worker",
                "/usr/sbin/fcoemon --syslog",
                "COMMAND",
                "catalina.base",
                "chronyd",
                "cmirrord",
                "greenplum",
                "httpd",
                "iscsid",
                "java",
                "jboss",
                "nfs-server",
                "nfsd",
                "nginx",
                "ntpd",
                "postgres",
                "smbd",
                "target_completi",
                "taskomaticd",
                "tgtd",
                "virt-who"
            ],
            "symbolic_name": "ps_auxww"
        },
        {
            "command": "/bin/ps -ef",
            "pattern": [
                "CMD",
                "nginx: master process",
                "nginx: worker process"
            ],
            "symbolic_name": "ps_ef"
        },
        {
            "command": "/sbin/pvs --nameprefixes --noheadings --separator='|' -a -o pv_all,vg_name --config=\"global{locking_type=0}\"",
            "pattern": [],
            "symbolic_name": "pvs_noheadings"
        },
        {
            "command": "/usr/sbin/rabbitmqctl list_queues name messages consumers auto_delete",
            "pattern": [],
            "symbolic_name": "rabbitmq_queues"
        },
        {
            "command": "/usr/sbin/rabbitmqctl report",
            "pattern": [],
            "symbolic_name": "rabbitmq_report"
        },
        {
            "command": "/usr/sbin/rabbitmqctl list_users",
            "pattern": [],
            "symbolic_name": "rabbitmq_users"
        },
        {
            "command": "/usr/bin/rhn-schema-version",
            "pattern": [],
            "symbolic_name": "rhn_schema_version"
        },
        {
            "command": "/usr/bin/crontab -l -u root",
            "pattern": [
                "heat-manage"
            ],
            "symbolic_name": "root_crontab"
        },
        {
            "command": "/bin/rpm -V coreutils procps procps-ng shadow-utils passwd sudo",
            "pattern": [],
            "symbolic_name": "rpm__V_packages"
        },
        {
            "command": "/usr/sbin/sestatus -b",
            "pattern": [],
            "symbolic_name": "sestatus"
        },
        {
            "command": "/usr/bin/smbstatus -p",
            "pattern": [],
            "symbolic_name": "smbstatus_p"
        },
        {
            "command": "/usr/bin/scl --list",
            "pattern": [],
            "symbolic_name": "software_collections_list"
        },
        {
            "command": "/usr/bin/subscription-manager release --show",
            "pattern": [],
            "symbolic_name": "subscription_manager_release_show"
        },
        {
            "command": "/usr/bin/subscription-manager repos --list-enabled",
            "pattern": [],
            "symbolic_name": "subscription_manager_repos_list_enabled"
        },
        {
            "command": "/usr/sbin/ss -tupna",
            "pattern": [],
            "symbolic_name": "ss"
        },
        {
            "command": "/usr/sbin/ss -tupna",
            "pattern": [],
            "symbolic_name": "ss_tupna"
        },
        {
            "command": "/bin/ls -l /etc/ssh/sshd_config",
            "pattern": [],
            "symbolic_name": "sshd_config_perms"
        },
        {
            "command": "/sbin/sysctl -a",
            "pattern": [],
            "symbolic_name": "sysctl"
        },
        {
            "command": "/bin/systemctl show openstack-cinder-volume",
            "pattern": [],
            "symbolic_name": "systemctl_cinder_volume"
        },
        {
            "command": "/bin/systemctl list-unit-files",
            "pattern": [],
            "symbolic_name": "systemctl_list_unit_files"
        },
        {
            "command": "/bin/systemctl list-units",
            "pattern": [],
            "symbolic_name": "systemctl_list_units"
        },
        {
            "command": "/bin/systemctl show mariadb",
            "pattern": [],
            "symbolic_name": "systemctl_mariadb"
        },
        {
            "command": "/bin/systemctl show qpidd",
            "pattern": [],
            "symbolic_name": "systemctl_qpidd"
        },
        {
            "command": "/bin/systemctl show qdrouterd",
            "pattern": [],
            "symbolic_name": "systemctl_qdrouterd"
        },
        {
            "command": "/bin/systemctl show httpd",
            "pattern": [],
            "symbolic_name": "systemctl_httpd"
        },
        {
            "command": "/bin/systemctl show smart_proxy_dynflow_core",
            "pattern": [],
            "symbolic_name": "systemctl_smartpdc"
        },
        {
            "command": "/bin/systool -b scsi -v",
            "pattern": [],
            "symbolic_name": "systool_b_scsi_v"
        },
        {
            "command": "/usr/bin/teamdctl  state dump",
            "pattern": [],
            "pre_command": "iface",
            "symbolic_name": "teamdctl_state_dump"
        },
        {
            "command": "/usr/bin/find /usr/share -maxdepth 1 -name 'tomcat*' -exec /bin/grep -R -s 'VirtualDirContext' --include '*.xml' '{}' +",
            "pattern": [],
            "symbolic_name": "tomcat_vdc_fallback"
        },
        {
            "command": "/usr/sbin/tuned-adm list",
            "pattern": [],
            "symbolic_name": "tuned_adm"
        },
        {
            "command": "/bin/uname -a",
            "pattern": [],
            "symbolic_name": "uname"
        },
        {
            "command": "/usr/bin/uptime",
            "pattern": [],
            "symbolic_name": "uptime"
        },
        {
            "command": "/sbin/vgdisplay -vv",
            "pattern": [],
            "symbolic_name": "vgdisplay"
        },
        {
            "command": "/sbin/vgs --nameprefixes --noheadings --separator='|' -a -o vg_all --config=\"global{locking_type=0}\"",
            "pattern": [],
            "symbolic_name": "vgs_noheadings"
        },
        {
            "command": "/usr/bin/virsh --readonly list --all",
            "pattern": [],
            "symbolic_name": "virsh_list_all"
        },
        {
            "command": "/usr/sbin/virt-what",
            "pattern": [],
            "symbolic_name": "virt_what"
        },
        {
            "command": "/usr/bin/find /var/crash /var/tmp -path '*.reports-*/whoopsie-report'",
            "pattern": [],
            "symbolic_name": "woopsie"
        },
        {
            "command": "/usr/bin/yum -C repolist",
            "pattern": [],
            "symbolic_name": "yum_repolist"
        }
    ],
    "files": [
        {
            "file": "/root/.config/openshift/hosts",
            "pattern": [
                "[",
                "openshift_use_crio"
            ],
            "symbolic_name": "openshift_hosts"
        },
        {
            "file": "/etc/redhat-access-insights/machine-id",
            "pattern": [],
            "symbolic_name": "machine_id1"
        },
        {
            "file": "/etc/redhat_access_proactive/machine-id",
            "pattern": [],
            "symbolic_name": "machine_id2"
        },
        {
            "file": "/proc/1/cgroup",
            "pattern": [],
            "symbolic_name": "init_process_cgroup"
        },
        {
            "file": "/etc/insights-client/machine-id",
            "pattern": [],
            "symbolic_name": "machine_id3"
        },
        {
            "file": "/var/log/audit/audit.log",
            "pattern": [
                "comm=\"logrotate\" path=\"/var/log/candlepin",
                "comm=\"mongod\"",
                "denied",
                "type=AVC"
            ],
            "symbolic_name": "audit_log"
        },
        {
            "file": "/etc/audit/auditd.conf",
            "pattern": [],
            "symbolic_name": "auditd_conf"
        },
        {
            "file": "/proc/net/bonding/()*bond.*",
            "pattern": [],
            "symbolic_name": "bond"
        },
        {
            "file": "/var/log/tomcat/()*catalina\\.out",
            "pattern": [
                "APPARENT DEADLOCK!",
                "NoCobblerTokenException: We had an error trying to login."
            ],
            "symbolic_name": "catalina_out"
        },
        {
            "file": "/var/log/tomcat6/()*catalina\\.out",
            "pattern": [
                "APPARENT DEADLOCK!",
                "NoCobblerTokenException: We had an error trying to login."
            ],
            "symbolic_name": "catalina_out"
        },
        {
            "file": "/tomcat-logs/tomcat/()*catalina\\.out",
            "pattern": [
                "APPARENT DEADLOCK!",
                "NoCobblerTokenException: We had an error trying to login."
            ],
            "symbolic_name": "catalina_out"
        },
        {
            "file": "/tomcat-logs/tomcat6/()*catalina\\.out",
            "pattern": [
                "APPARENT DEADLOCK!",
                "NoCobblerTokenException: We had an error trying to login."
            ],
            "symbolic_name": "catalina_out"
        },
        {
            "file": "/proc/driver/cciss/()*cciss.*",
            "pattern": [],
            "symbolic_name": "cciss"
        },
        {
            "file": "/etc/ceilometer/ceilometer.conf",
            "pattern": [],
            "symbolic_name": "ceilometer_conf"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/ceilometer/etc/ceilometer/ceilometer.conf",
            "pattern": [],
            "symbolic_name": "ceilometer_conf"
        },
        {
            "file": "/var/log/ceph/ceph.log",
            "pattern": [
                "[WRN] slow request"
            ],
            "symbolic_name": "ceph_log"
        },
        {
            "file": "/var/log/ceph/()*ceph-osd.*\\.log$",
            "pattern": [
                "Thread.cc"
            ],
            "symbolic_name": "ceph_osd_log"
        },
        {
            "file": "/etc/chrony.conf",
            "pattern": [],
            "symbolic_name": "chrony_conf"
        },
        {
            "file": "/var/lib/pacemaker/cib/cib.xml",
            "pattern": [],
            "symbolic_name": "cib_xml"
        },
        {
            "file": "/etc/cinder/cinder.conf",
            "pattern": [],
            "symbolic_name": "cinder_conf"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/cinder/etc/cinder/cinder.conf",
            "pattern": [],
            "symbolic_name": "cinder_conf"
        },
        {
            "file": "/var/log/cinder/volume.log",
            "pattern": [
                "Image cloning unsuccessful for image",
                "Message: NFS file could not be discovered.",
                "[Errno 24] Too many open files"
            ],
            "symbolic_name": "cinder_volume_log"
        },
        {
            "file": "/etc/cluster/cluster.conf",
            "pattern": [
                "clusternode name="
            ],
            "symbolic_name": "cluster_conf"
        },
        {
            "file": "/proc/cmdline",
            "pattern": [],
            "symbolic_name": "cmdline"
        },
        {
            "file": "/etc/cobbler/modules.conf",
            "pattern": [],
            "symbolic_name": "cobbler_modules_conf"
        },
        {
            "file": "/etc/cobbler/settings",
            "pattern": [],
            "symbolic_name": "cobbler_settings"
        },
        {
            "file": "/etc/sysconfig/corosync",
            "pattern": [],
            "symbolic_name": "corosync"
        },
        {
            "file": "/proc/cpuinfo",
            "pattern": [],
            "symbolic_name": "cpuinfo"
        },
        {
            "file": "/sys/devices/system/clocksource/clocksource0/current_clocksource",
            "pattern": [],
            "symbolic_name": "current_clocksource"
        },
        {
            "file": "/sys/devices/system/cpu/smt/active",
            "pattern": [],
            "symbolic_name": "cpu_smt_active"
        },
        {
            "file": "/sys/devices/system/cpu/smt/control",
            "pattern": [],
            "symbolic_name": "cpu_smt_control"
        },
        {
            "file": "/sys/devices/system/cpu/vulnerabilities/meltdown",
            "pattern": [],
            "symbolic_name": "cpu_vulns_meltdown"
        },
        {
            "file": "/sys/devices/system/cpu/vulnerabilities/spectre_v1",
            "pattern": [],
            "symbolic_name": "cpu_vulns_spectre_v1"
        },
        {
            "file": "/sys/devices/system/cpu/vulnerabilities/spectre_v2",
            "pattern": [],
            "symbolic_name": "cpu_vulns_spectre_v2"
        },
        {
            "file": "/sys/devices/system/cpu/vulnerabilities/spec_store_bypass",
            "pattern": [],
            "symbolic_name": "cpu_vulns_spec_store_bypass"
        },
        {
            "file": "/sys/fs/cgroup/cpuset/cpuset.cpus",
            "pattern": [],
            "symbolic_name": "cpuset_cpus"
        },
        {
            "file": "/sys/kernel/debug/x86/retp_enabled",
            "pattern": [],
            "symbolic_name": "x86_retp_enabled"
        },
        {
            "file": "/var/log/dirsrv/.*/()*(errors|errors\\.2.*)",
            "pattern": [
                "We recommend to increase the entry cache size nsslapd-cachememsize"
            ],
            "symbolic_name": "dirsrv_errors"
        },
        {
            "file": "/etc/redhat-access-insights/machine-id",
            "pattern": [],
            "symbolic_name": "machine_id1"
        },
        {
            "file": "/etc/sysconfig/docker-storage-setup",
            "pattern": [],
            "symbolic_name": "docker_storage_setup"
        },
        {
            "file": "/etc/sysconfig/docker",
            "pattern": [],
            "symbolic_name": "docker_sysconfig"
        },
        {
            "file": "/var/log/ovirt-engine/engine.log",
            "pattern": [
                "CLUSTER_CANNOT_UPDATE_COMPATIBILITY_VERSION_WITH_LOWER_HOSTS",
                "Received fatal alert: certificate_expired",
                "has paused due to storage I/O problem"
            ],
            "symbolic_name": "engine_log"
        },
        {
            "file": "/var/log/ovirt-engine/server.log",
            "pattern": [
                "ERROR [org.jboss.as.controller.management-operation]",
                "Operation (\"deploy\") failed"
            ],
            "symbolic_name": "ovirt_engine_server_log"
        },
        {
            "file": "/var/log/ovirt-engine/ui.log",
            "pattern": [],
            "symbolic_name": "ovirt_engine_ui_log"
        },
        {
            "file": "/var/log/ovirt-engine/boot.log",
            "pattern": [],
            "symbolic_name": "ovirt_engine_boot_log"
        },
        {
            "file": "/var/log/ovirt-engine/console.log",
            "pattern": [],
            "symbolic_name": "ovirt_engine_console_log"
        },
        {
            "file": "/etc/systemd/()*journald\\.conf",
            "pattern": [],
            "symbolic_name": "etc_journald_conf"
        },
        {
            "file": "/etc/systemd/journald.conf.d/()*.+\\.conf",
            "pattern": [],
            "symbolic_name": "etc_journald_conf_d"
        },
        {
            "file": "/etc/fstab",
            "pattern": [],
            "symbolic_name": "fstab"
        },
        {
            "file": "/etc/my.cnf.d/galera.cnf",
            "pattern": [],
            "symbolic_name": "galera_cnf"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/mysql/etc/my.cnf.d/galera.cnf",
            "pattern": [],
            "symbolic_name": "galera_cnf"
        },
        {
            "file": "/boot/efi/EFI/redhat/grub.conf",
            "pattern": [],
            "symbolic_name": "grub_efi_conf"
        },
        {
            "file": "/boot/grub/grub.conf",
            "pattern": [],
            "symbolic_name": "grub_conf"
        },
        {
            "file": "/boot/efi/EFI/redhat/grub.cfg",
            "pattern": [],
            "symbolic_name": "grub2_efi_cfg"
        },
        {
            "file": "/boot/grub2/grub.cfg",
            "pattern": [],
            "symbolic_name": "grub2_cfg"
        },
        {
            "file": "/etc/haproxy/haproxy.cfg",
            "pattern": [],
            "symbolic_name": "haproxy_cfg"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/haproxy/etc/haproxy/haproxy.cfg",
            "pattern": [],
            "symbolic_name": "haproxy_cfg"
        },
        {
            "file": "/etc/heat/heat.conf",
            "pattern": [],
            "symbolic_name": "heat_conf"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/heat/etc/heat/heat.conf",
            "pattern": [],
            "symbolic_name": "heat_conf"
        },
        {
            "file": "/etc/hosts",
            "pattern": [],
            "symbolic_name": "hosts"
        },
        {
            "file": "/etc/httpd/conf/()*httpd\\.conf",
            "pattern": [],
            "symbolic_name": "httpd_conf"
        },
        {
            "file": "/etc/httpd/conf.d/()*.+\\.conf",
            "pattern": [],
            "symbolic_name": "httpd_conf_d"
        },
        {
            "file": "/opt/rh/httpd24/root/etc/httpd/conf/httpd.conf",
            "pattern": [],
            "symbolic_name": "httpd_conf_scl_httpd24"
        },
        {
            "file": "/opt/rh/httpd24/root/etc/httpd/conf.d/()*.+\\.conf",
            "pattern": [],
            "symbolic_name": "httpd_conf_scl_httpd24"
        },
        {
            "file": "/opt/rh/jbcs-httpd24/root/etc/httpd/conf/httpd.conf",
            "pattern": [],
            "symbolic_name": "httpd_conf_scl_jbcs_httpd24"
        },
        {
            "file": "/opt/rh/jbcs-httpd24/root/etc/httpd/conf.d/()*.+\\.conf",
            "pattern": [],
            "symbolic_name": "httpd_conf_scl_jbcs_httpd24"
        },
        {
            "file": "/var/log/httpd/error_log",
            "pattern": [
                "(28)No space left on device: ",
                "AH00485: scoreboard is full, not at MaxRequestWorkers",
                "ModSecurity: collections_remove_stale: Failed deleting collection",
                "Require ServerLimit > 0, setting to 1",
                "Resource temporarily unavailable",
                "and would exceed the ServerLimit value of ",
                "consider raising the MaxClients setting",
                "consider raising the MaxRequestWorkers setting",
                "exceed ServerLimit of",
                "exceeds ServerLimit value of",
                "exceeds compile time limit of",
                "exceeds compile-time limit of",
                "exit signal Segmentation fault",
                "manager_handler CONFIG error: MEM: Can't update or insert node",
                "manager_handler ENABLE-APP error: MEM: Can't update or insert context",
                "manager_handler ENABLE-APP error: MEM: Can't update or insert host alias",
                "not allowed, increasing to 1"
            ],
            "symbolic_name": "httpd_error_log"
        },
        {
            "file": "/etc/sysconfig/network-scripts/()*ifcfg-.*",
            "pattern": [],
            "symbolic_name": "ifcfg"
        },
        {
            "file": "/etc/ImageMagick/()*policy\\.xml",
            "pattern": [
                "</policymap>",
                "<policy",
                "<policymap>"
            ],
            "symbolic_name": "imagemagick_policy"
        },
        {
            "file": "/usr/lib64/ImageMagick-6.5.4/config/()*policy\\.xml",
            "pattern": [
                "</policymap>",
                "<policy",
                "<policymap>"
            ],
            "symbolic_name": "imagemagick_policy"
        },
        {
            "file": "/usr/lib/ImageMagick-6.5.4/config/()*policy\\.xml",
            "pattern": [
                "</policymap>",
                "<policy",
                "<policymap>"
            ],
            "symbolic_name": "imagemagick_policy"
        },
        {
            "file": "/etc/vmware-tools/tools.conf",
            "pattern": [],
            "symbolic_name": "vmware_tools_conf"
        },
        {
            "file": "/proc/interrupts",
            "pattern": [],
            "symbolic_name": "interrupts"
        },
        {
            "file": "/var/log/ipaupgrade.log",
            "pattern": [
                "wait_for_open_ports: localhost"
            ],
            "symbolic_name": "ipaupgrade_log"
        },
        {
            "file": "/etc/sysconfig/iptables",
            "pattern": [],
            "symbolic_name": "iptables_permanent"
        },
        {
            "file": "/etc/kdump.conf",
            "pattern": [],
            "symbolic_name": "kdump_conf"
        },
        {
            "file": "/sys/kernel/kexec_crash_size",
            "pattern": [],
            "symbolic_name": "kexec_crash_size"
        },
        {
            "file": "/etc/()*krb5\\.conf",
            "pattern": [],
            "symbolic_name": "krb5"
        },
        {
            "file": "/etc/krb5.conf.d/()*.*\\.conf",
            "pattern": [],
            "symbolic_name": "krb5_conf_d"
        },
        {
            "file": "/sys/kernel/mm/ksm/run",
            "pattern": [],
            "symbolic_name": "ksmstate"
        },
        {
            "file": "/etc/security/()*limits\\.conf",
            "pattern": [],
            "symbolic_name": "limits_conf"
        },
        {
            "file": "/etc/security/limits.d/()*.*\\.conf",
            "pattern": [],
            "symbolic_name": "limits_d"
        },
        {
            "file": "/etc/lvm/lvm.conf",
            "pattern": [
                "auto_activation_volume_list",
                "filter",
                "locking_type",
                "volume_list"
            ],
            "symbolic_name": "lvm_conf"
        },
        {
            "file": "/var/log/mariadb/mariadb.log",
            "pattern": [
                "Duplicate entry",
                "Too many open files",
                "[ERROR]",
                "for key 'PRIMARY'"
            ],
            "symbolic_name": "mariadb_log"
        },
        {
            "file": "/proc/mdstat",
            "pattern": [],
            "symbolic_name": "mdstat"
        },
        {
            "file": "/proc/meminfo",
            "pattern": [],
            "symbolic_name": "meminfo"
        },
        {
            "file": "/var/log/messages",
            "pattern": [
                " disconnect jid=",
                "11000 E11000 duplicate key error index: pulp_database.repo_profile_applicability.$profile_hash_-1_repo_id_-1",
                ": segfault at ",
                ": session replaced: jid=",
                "Abort command issued",
                "DMA Status error.  Resetting chip",
                "Dazed and confused, but trying to continue",
                "Device offlined - not ready after error recovery",
                "Error deleting EBS Disk volume aws",
                "Error in FW/Card",
                "Error running DeviceResume dm_task_run failed",
                "Link down",
                "List /apis/image.openshift.io/v1/images",
                "MDC/MDIO access timeout",
                "Machine",
                "Medium access timeout failure. Offlining disk!",
                "Neighbour table overflow",
                "Out of MCCQ wrbs",
                "Out of memory: kill process",
                "SCSI device reset on",
                "SDN initialization failed: Error: Existing service with IP: None is not part of service network",
                "Sense Key : Illegal Request [current]",
                "Temperature above threshold",
                "This system does not support \"SSSE3\"",
                "Uhhuh. NMI received for unknown reason",
                "Virtualization daemon",
                "WRITE SAME failed. Manually zeroing",
                "belongs to docker.service",
                "blocked FC remote port time out",
                "does not seem to be present, delaying initialization",
                "error Error on attach: Node not found",
                "ext4_ext_search_left",
                "failed: Connection amqps:",
                "fiid_obj_get: 'present_countdown_value': data not available",
                "firewalld - dynamic firewall daemon",
                "fit failure summary on nodes : Insufficient pods",
                "heated above trip temperature",
                "http2: no cached connection was available",
                "in libnl.so.1",
                "irq handler for vector (irq -1)",
                "is beyond advertised capabilities",
                "kernel: CIFS VFS: Unexpected SMB signature",
                "kernel: bnx2fc: byte_count",
                "kernel: kvm: disabled by bios",
                "kernel: lockd: Unknown symbol register_inet6addr_notifier",
                "kernel: lockd: Unknown symbol unregister_inet6addr_notifier",
                "kernel: megasas: Found FW in FAULT state,will reset adapter.",
                "khash_super_prune_nolock",
                "megaraid_sas: FW detected to be in faultstate, restarting it",
                "mode:0x20",
                "multipathd.service operation timed out. Terminating",
                "nectar.downloaders.threaded:ERROR: Skipping requests to",
                "nf_conntrack: expectation table full",
                "nf_conntrack: table full, dropping packet",
                "page allocation failure",
                "per_source_limit from",
                "reservation conflict",
                "segfault at",
                "server kernel: rhsmcertd-worke",
                "shm_open failed, Permission denied",
                "skb_copy",
                "skb_over_panic",
                "start request repeated too quickly for docker.service",
                "swapper: page allocation failure",
                "systemd[1]: Received SIGCHLD from PID",
                "tg3_start_xmit",
                "timeout; kill it",
                "udev: renamed network interface",
                "udevd",
                "unknown filesystem type 'binfmt_misc'",
                "vdsm-tool: EnvironmentError: Failed to restore the persisted networks"
            ],
            "symbolic_name": "messages"
        },
        {
            "file": "/etc/()*modprobe\\.conf",
            "pattern": [],
            "symbolic_name": "modprobe_conf"
        },
        {
            "file": "/etc/modprobe.d/()*.*\\.conf",
            "pattern": [],
            "symbolic_name": "modprobe_d"
        },
        {
            "file": "/etc/()*mongod.conf",
            "pattern": [
                "dbpath",
                "destination",
                "syslog",
                "systemLog"
            ],
            "symbolic_name": "mongod_conf"
        },
        {
            "file": "/etc/multipath.conf",
            "pattern": [],
            "symbolic_name": "multipath_conf"
        },
        {
            "file": "/etc/sysconfig/netconsole",
            "pattern": [],
            "symbolic_name": "netconsole"
        },
        {
            "file": "/etc/NetworkManager/dispatcher.d/.*-dhclient",
            "pattern": [],
            "symbolic_name": "networkmanager_dispatcher_d"
        },
        {
            "file": "/proc/net/netfilter/nfnetlink_queue",
            "pattern": [],
            "symbolic_name": "nfnetlink_queue"
        },
        {
            "file": "/etc/exports",
            "pattern": [
                "*",
                "no_root_squash"
            ],
            "symbolic_name": "nfs_exports"
        },
        {
            "file": "/etc/exports.d/()*.*\\.exports",
            "pattern": [
                "*",
                "no_root_squash"
            ],
            "symbolic_name": "nfs_exports_d"
        },
        {
            "file": "/etc/nginx/()*nginx.conf",
            "pattern": [],
            "symbolic_name": "nginx_conf"
        },
        {
            "file": "/etc/opt/rh/rh-nginx112/nginx/()*nginx.conf",
            "pattern": [],
            "symbolic_name": "nginx_conf"
        },
        {
            "file": "/opt/rh/nginx14/root/etc/nginx/()*nginx.conf",
            "pattern": [],
            "symbolic_name": "nginx_conf"
        },
        {
            "file": "/opt/rh/nginx16/root/etc/nginx/()*nginx.conf",
            "pattern": [],
            "symbolic_name": "nginx_conf"
        },
        {
            "file": "/etc/opt/rh/rh-nginx110/nginx/()*nginx.conf",
            "pattern": [],
            "symbolic_name": "nginx_conf"
        },
        {
            "file": "/etc/opt/rh/rh-nginx18/nginx/()*nginx.conf",
            "pattern": [],
            "symbolic_name": "nginx_conf"
        },
        {
            "file": "/var/log/nova/nova-api.log",
            "pattern": [
                "Timed out waiting for a reply to message ID"
            ],
            "symbolic_name": "nova_api_log"
        },
        {
            "file": "/var/log/containers/nova/nova-api.log",
            "pattern": [
                "Timed out waiting for a reply to message ID"
            ],
            "symbolic_name": "nova_api_log"
        },
        {
            "file": "/var/log/nova/nova-compute.log",
            "pattern": [
                "Live Migration failure: operation failed: Failed to connect to remote libvirt URI qemu+ssh",
                "Resuming guest",
                "does not match source",
                "error: Failed to start domain",
                "libvirt-guests.sh",
                "unsupported configuration: Target device drive address",
                "unsupported configuration: Unable to find security driver for model selinux"
            ],
            "symbolic_name": "nova_compute_log"
        },
        {
            "file": "/var/log/containers/nova/nova-compute.log",
            "pattern": [
                "Live Migration failure: operation failed: Failed to connect to remote libvirt URI qemu+ssh",
                "Resuming guest",
                "does not match source",
                "error: Failed to start domain",
                "libvirt-guests.sh",
                "unsupported configuration: Target device drive address",
                "unsupported configuration: Unable to find security driver for model selinux"
            ],
            "symbolic_name": "nova_compute_log"
        },
        {
            "file": "/etc/nova/nova.conf",
            "pattern": [],
            "symbolic_name": "nova_conf"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/nova/etc/nova/nova.conf",
            "pattern": [],
            "symbolic_name": "nova_conf"
        },
        {
            "file": "/etc/nscd.conf",
            "pattern": [
                "enable-cache"
            ],
            "symbolic_name": "nscd_conf"
        },
        {
            "file": "/etc/nsswitch.conf",
            "pattern": [
                "HOSTS:",
                "Hosts:",
                "hosts:"
            ],
            "symbolic_name": "nsswitch_conf"
        },
        {
            "file": "/etc/ntp.conf",
            "pattern": [],
            "symbolic_name": "ntp_conf"
        },
        {
            "file": "/etc/odbc.ini",
            "pattern": [
                "DRIVER",
                "Driver",
                "NO_SSPS",
                "No_ssps",
                "SERVER",
                "Server",
                "[",
                "driver",
                "no_ssps",
                "server"
            ],
            "symbolic_name": "odbc_ini"
        },
        {
            "file": "/etc/odbcinst.ini",
            "pattern": [],
            "symbolic_name": "odbcinst_ini"
        },
        {
            "file": "/etc/origin/master/master-config.yaml",
            "pattern": [],
            "symbolic_name": "ose_master_config"
        },
        {
            "file": "/etc/origin/node/node-config.yaml",
            "pattern": [],
            "symbolic_name": "ose_node_config"
        },
        {
            "file": "/var/log/pacemaker.log",
            "pattern": [
                "pcmk_dbus_find_error"
            ],
            "symbolic_name": "pacemaker_log"
        },
        {
            "file": "/etc/pam.d/password-auth",
            "pattern": [],
            "symbolic_name": "password_auth"
        },
        {
            "file": "/etc/yum/pluginconf.d/()*\\w+\\.conf",
            "pattern": [],
            "symbolic_name": "pluginconf_d"
        },
        {
            "file": "/var/lib/pgsql/data/postgresql.conf",
            "pattern": [],
            "symbolic_name": "postgresql_conf"
        },
        {
            "file": "/var/lib/pgsql/data/pg_log/()*postgresql-.+\\.log",
            "pattern": [
                "ERROR:",
                "FATAL",
                "checkpoints are occurring too frequently",
                "connection limit exceeded for non-superusers",
                "database is not accepting commands to avoid wraparound data loss in database",
                "must be vacuumed within",
                "remaining connection slots are reserved for non-replication superuser connections"
            ],
            "symbolic_name": "postgresql_log"
        },
        {
            "file": "/proc/net/snmp",
            "pattern": [],
            "symbolic_name": "proc_snmp_ipv4"
        },
        {
            "file": "/proc/net/snmp6",
            "pattern": [],
            "symbolic_name": "proc_snmp_ipv6"
        },
        {
            "file": "/sos_commands/process/ps_auxwww",
            "pattern": [],
            "symbolic_name": "ps_auxwww"
        },
        {
            "file": "/etc/sysconfig/puppetserver",
            "pattern": [
                "JAVA_ARGS"
            ],
            "symbolic_name": "puppetserver_config"
        },
        {
            "file": "/etc/libvirt/qemu.conf",
            "pattern": [],
            "symbolic_name": "qemu_conf"
        },
        {
            "file": "/etc/libvirt/qemu/()*.+\\.xml",
            "pattern": [],
            "symbolic_name": "qemu_xml"
        },
        {
            "file": "/var/log/rabbitmq/startup_log",
            "pattern": [
                "Event crashed log handler:"
            ],
            "symbolic_name": "rabbitmq_startup_log"
        },
        {
            "file": "/etc/rc.d/rc.local",
            "pattern": [],
            "symbolic_name": "rc_local"
        },
        {
            "file": "/etc/redhat-release",
            "pattern": [],
            "symbolic_name": "redhat_release"
        },
        {
            "file": "/etc/resolv.conf",
            "pattern": [],
            "symbolic_name": "resolv_conf"
        },
        {
            "file": "/etc/opt/rh/rh-mongodb26/()*mongod.conf",
            "pattern": [
                "destination",
                "syslog",
                "systemLog"
            ],
            "symbolic_name": "rh_mongodb26_conf"
        },
        {
            "file": "/etc/sysconfig/rhn/()*rhn-entitlement-cert\\.xml.*",
            "pattern": [],
            "symbolic_name": "rhn_entitlement_cert_xml"
        },
        {
            "file": "/etc/rhn/rhn.conf",
            "pattern": [],
            "symbolic_name": "rhn_conf"
        },
        {
            "file": "/usr/share/rhn/config-defaults/rhn_hibernate.conf",
            "pattern": [],
            "symbolic_name": "rhn_hibernate_conf"
        },
        {
            "file": "/var/log/rhn/search/rhn_search_daemon.log",
            "pattern": [
                "APPARENT DEADLOCK!"
            ],
            "symbolic_name": "rhn_search_daemon_log"
        },
        {
            "file": "/var/log/rhn/rhn_taskomatic_daemon.log",
            "pattern": [],
            "symbolic_name": "rhn_taskomatic_daemon_log"
        },
        {
            "file": "/etc/rhsm/rhsm.conf",
            "pattern": [],
            "symbolic_name": "rhsm_conf"
        },
        {
            "file": "/etc/qpid/qpidd.conf",
            "pattern": [],
            "symbolic_name": "qpidd_conf"
        },
        {
            "file": "/var/log/rhsm/rhsm.log",
            "pattern": [
                "KeyError: 'config.network.dnsConfig.hostName'",
                "Temporary failure in name resolution",
                "Validation failed: Name is invalid",
                "virt.host_type=hyperv, virt.uuid=Not Settable"
            ],
            "symbolic_name": "rhsm_log"
        },
        {
            "file": "/etc/rsyslog.conf",
            "pattern": [
                "imtcp",
                "regex"
            ],
            "symbolic_name": "rsyslog_conf"
        },
        {
            "file": "/etc/samba/smb.conf",
            "pattern": [
                "GLOBAL",
                "Global",
                "KERBEROS METHOD",
                "Kerberos Method",
                "MAX SMBD PROCESSES",
                "Max Smbd Processes",
                "NT PIPE SUPPORT",
                "Nt Pipe Support",
                "REALM",
                "Realm",
                "SECURITY",
                "Security",
                "[",
                "comment",
                "global",
                "kerberos method",
                "max smbd processes",
                "nt pipe support",
                "path",
                "read only",
                "realm",
                "security",
                "writable"
            ],
            "symbolic_name": "samba"
        },
        {
            "file": "/usr/share/foreman/lib/satellite/version.rb",
            "pattern": [],
            "symbolic_name": "satellite_version_rb"
        },
        {
            "file": "/proc/scsi/scsi",
            "pattern": [],
            "symbolic_name": "scsi"
        },
        {
            "file": "/var/log/secure",
            "pattern": [
                "error: session_pty_req: session"
            ],
            "symbolic_name": "secure"
        },
        {
            "file": "/etc/selinux/config",
            "pattern": [],
            "symbolic_name": "selinux_config"
        },
        {
            "file": "/etc/sysconfig/foreman-tasks",
            "pattern": [
                "EXECUTOR_MEMORY_LIMIT",
                "EXECUTOR_MEMORY_MONITOR_DELAY",
                "EXECUTOR_MEMORY_MONITOR_INTERVAL"
            ],
            "symbolic_name": "foreman_tasks_config"
        },
        {
            "file": "/proc/net/softnet_stat",
            "pattern": [],
            "symbolic_name": "softnet_stat"
        },
        {
            "file": "/etc/ssh/sshd_config",
            "pattern": [
                "ALLOWUSERS",
                "AllowUsers",
                "Allowusers",
                "CHALLENGERESPONSEAUTHENTICATION",
                "CIPHERS",
                "CLIENTALIVECOUNTMAX",
                "CLIENTALIVEINTERVAL",
                "ChallengeResponseAuthentication",
                "Challengeresponseauthentication",
                "Ciphers",
                "ClientAliveCountMax",
                "ClientAliveInterval",
                "Clientalivecountmax",
                "Clientaliveinterval",
                "DENYUSERS",
                "DenyUsers",
                "Denyusers",
                "KBDINTERACTIVEAUTHENTICATION",
                "KbdInteractiveAuthentication",
                "Kbdinteractiveauthentication",
                "LOGINGRACETIME",
                "LoginGraceTime",
                "Logingracetime",
                "MACS",
                "MACs",
                "MAXAUTHTRIES",
                "MAXSTARTUPS",
                "Macs",
                "Match",
                "MaxAuthTries",
                "MaxStartups",
                "Maxauthtries",
                "Maxstartups",
                "PERMITEMPTYPASSWORDS",
                "PERMITROOTLOGIN",
                "PROTOCOL",
                "PasswordAuthentication",
                "PermitEmptyPasswords",
                "PermitRootLogin",
                "Permitemptypasswords",
                "Permitrootlogin",
                "Protocol",
                "USEPAM",
                "UsePAM",
                "UsePam",
                "Usepam",
                "allowusers",
                "challengeresponseauthentication",
                "ciphers",
                "clientalivecountmax",
                "clientaliveinterval",
                "denyusers",
                "kbdinteractiveauthentication",
                "logingracetime",
                "macs",
                "maxauthtries",
                "maxstartups",
                "permitemptypasswords",
                "permitrootlogin",
                "protocol",
                "usepam"
            ],
            "symbolic_name": "sshd_config"
        },
        {
            "file": "/etc/swift/object-expirer.conf",
            "pattern": [],
            "symbolic_name": "swift_object_expirer_conf"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/swift/etc/swift/object-expirer.conf",
            "pattern": [],
            "symbolic_name": "swift_object_expirer_conf"
        },
        {
            "file": "/etc/swift/proxy-server.conf",
            "pattern": [],
            "symbolic_name": "swift_proxy_server_conf"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/swift/etc/swift/proxy-server.conf",
            "pattern": [],
            "symbolic_name": "swift_proxy_server_conf"
        },
        {
            "file": "/etc/sysconfig/kdump",
            "pattern": [],
            "symbolic_name": "sysconfig_kdump"
        },
        {
            "file": "/etc/sysconfig/libvirt-guests",
            "pattern": [],
            "symbolic_name": "sysconfig_libvirt_guests"
        },
        {
            "file": "/etc/sysconfig/memcached",
            "pattern": [],
            "symbolic_name": "sysconfig_memcached"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/memcached/etc/sysconfig/memcached",
            "pattern": [],
            "symbolic_name": "sysconfig_memcached"
        },
        {
            "file": "/etc/sysconfig/()*mongod",
            "pattern": [],
            "symbolic_name": "sysconfig_mongod"
        },
        {
            "file": "/etc/sysconfig/ntpd",
            "pattern": [],
            "symbolic_name": "sysconfig_ntpd"
        },
        {
            "file": "/etc/opt/rh/rh-mongodb26/sysconfig/()*mongod",
            "pattern": [],
            "symbolic_name": "sysconfig_rh_mongodb26"
        },
        {
            "file": "/etc/sysconfig/virt-who",
            "pattern": [],
            "symbolic_name": "sysconfig_virt_who"
        },
        {
            "file": "/etc/sysctl.conf",
            "pattern": [],
            "symbolic_name": "sysctl_conf"
        },
        {
            "file": "/usr/lib/systemd/system/docker.service",
            "pattern": [],
            "symbolic_name": "systemd_docker"
        },
        {
            "file": "/usr/lib/systemd/system/atomic-openshift-node.service",
            "pattern": [],
            "symbolic_name": "systemd_openshift_node"
        },
        {
            "file": "/etc/systemd/system.conf",
            "pattern": [],
            "symbolic_name": "systemd_system_conf"
        },
        {
            "file": "/etc/sysconfig/rhn/systemid",
            "pattern": [],
            "symbolic_name": "systemid"
        },
        {
            "file": "/sys/kernel/mm/transparent_hugepage/enabled",
            "pattern": [],
            "symbolic_name": "thp_enabled"
        },
        {
            "file": "/sys/kernel/mm/transparent_hugepage/use_zero_page",
            "pattern": [],
            "symbolic_name": "thp_use_zero_page"
        },
        {
            "file": "/etc/tmpfiles.d/()*.*\\.conf",
            "pattern": [],
            "symbolic_name": "tmpfilesd"
        },
        {
            "file": "/usr/lib/tmpfiles.d/()*.*\\.conf",
            "pattern": [],
            "symbolic_name": "tmpfilesd"
        },
        {
            "file": "/run/tmpfiles.d/()*.*\\.conf",
            "pattern": [],
            "symbolic_name": "tmpfilesd"
        },
        {
            "file": "/etc/sysconfig/rhn/up2date",
            "pattern": [],
            "symbolic_name": "up2date"
        },
        {
            "file": "/var/log/up2date",
            "pattern": [
                "Temporary failure in name resolution"
            ],
            "symbolic_name": "up2date_log"
        },
        {
            "file": "/usr/lib/systemd/journald.conf.d/()*.+\\.conf",
            "pattern": [],
            "symbolic_name": "usr_journald_conf_d"
        },
        {
            "file": "/etc/vdsm/vdsm.conf",
            "pattern": [],
            "symbolic_name": "vdsm_conf"
        },
        {
            "file": "/var/log/vdsm/vdsm.log",
            "pattern": [
                "(mailbox-spm) [storage.Misc.excCmd] /usr/bin/taskset --cpu-list",
                "16514': No route to host",
                "Changed state to Down: 'NoneType' object has no attribute 'attrib'",
                "Changed state to Down: internal error: Attempted double use of PCI slot",
                "ERROR (mailbox-spm) [storage.MailBox.SpmMailMonitor]",
                "Stopping connection",
                "The name org.fedoraproject.FirewallD1 was not provided by any .service files",
                "The vm start process failed",
                "_report_inconsistency",
                "lastCheck",
                "libvirtError: internal error: failed to format device alias",
                "looking for unfetched domain"
            ],
            "symbolic_name": "vdsm_log"
        },
        {
            "file": "/etc/vdsm/vdsm.id",
            "pattern": [],
            "symbolic_name": "vdsm_id"
        },
        {
            "file": "/etc/vdsm/logger.conf",
            "pattern": [],
            "symbolic_name": "vdsm_logger_conf"
        },
        {
            "file": "/etc/()*virt-who\\.conf",
            "pattern": [
                "[",
                "configs",
                "debug",
                "env",
                "interval",
                "log_",
                "oneshot",
                "owner",
                "server",
                "type"
            ],
            "symbolic_name": "virt_who_conf"
        },
        {
            "file": "/etc/virt-who.d/()*.*\\.conf",
            "pattern": [
                "[",
                "configs",
                "debug",
                "env",
                "interval",
                "log_",
                "oneshot",
                "owner",
                "server",
                "type"
            ],
            "symbolic_name": "virt_who_conf"
        },
        {
            "file": "/etc/pam.d/vsftpd",
            "pattern": [],
            "symbolic_name": "vsftpd"
        },
        {
            "file": "/etc/vsftpd/vsftpd.conf",
            "pattern": [
                "LOCAL_ENABLE",
                "Local_Enable",
                "SSL_ENABLE",
                "SSL_SSLV3",
                "Ssl_Enable",
                "Ssl_Sslv3",
                "local_enable",
                "ssl_enable",
                "ssl_sslv3"
            ],
            "symbolic_name": "vsftpd_conf"
        },
        {
            "file": "/sys/kernel/debug/x86/ibpb_enabled",
            "pattern": [],
            "symbolic_name": "x86_ibpb_enabled"
        },
        {
            "file": "/sys/kernel/debug/x86/ibrs_enabled",
            "pattern": [],
            "symbolic_name": "x86_ibrs_enabled"
        },
        {
            "file": "/sys/kernel/debug/x86/pti_enabled",
            "pattern": [],
            "symbolic_name": "x86_pti_enabled"
        },
        {
            "file": "/etc/()*xinetd\\.conf",
            "pattern": [],
            "symbolic_name": "xinetd_conf"
        },
        {
            "file": "/etc/xinetd.d/()*.*",
            "pattern": [],
            "symbolic_name": "xinetd_conf"
        },
        {
            "file": "/etc/yum.conf",
            "pattern": [],
            "symbolic_name": "yum_conf"
        },
        {
            "file": "/etc/yum.repos.d/()*.*\\.repo",
            "pattern": [],
            "symbolic_name": "yum_repos_d"
        },
        {
            "file": "/var/log/redhat-access-insights/redhat-access-insights.log",
            "pattern": [],
            "symbolic_name": "redhat_access_insights_log"
        },
        {
            "file": "/var/log/redhat_access_proactive/redhat_access_proactive.log",
            "pattern": [],
            "symbolic_name": "redhat_access_proactive_log"
        },
        {
            "file": "/etc/logrotate.conf",
            "pattern": [],
            "symbolic_name": "logrotate_conf"
        },
        {
            "file": "/etc/logrotate.d/().*",
            "pattern": [],
            "symbolic_name": "logrotate_conf"
        },
        {
            "file": "/etc/rhsm/facts/virt_uuid.facts",
            "pattern": [],
            "symbolic_name": "virt_uuid_facts"
        },
        {
            "file": "/var/log/containers/gnocchi/gnocchi-metricd.log",
            "pattern": [
                "ToozError: Cannot extend an unlocked lock"
            ],
            "symbolic_name": "gnocchi_metricd_log"
        },
        {
            "file": "/var/log/gnocchi/metricd.log",
            "pattern": [
                "ToozError: Cannot extend an unlocked lock"
            ],
            "symbolic_name": "gnocchi_metricd_log"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/gnocchi/etc/gnocchi/gnocchi.conf",
            "pattern": [
                "[",
                "driver",
                "storage"
            ],
            "symbolic_name": "gnocchi_conf"
        },
        {
            "file": "/etc/gnocchi/gnocchi.conf",
            "pattern": [
                "[",
                "driver",
                "storage"
            ],
            "symbolic_name": "gnocchi_conf"
        },
        {
            "file": "/etc/neutron/neutron.conf",
            "pattern": [
                "[",
                "dhcp_agents_per_network"
            ],
            "symbolic_name": "neutron_conf"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/neutron/etc/neutron/neutron.conf",
            "pattern": [
                "[",
                "dhcp_agents_per_network"
            ],
            "symbolic_name": "neutron_conf"
        },
        {
            "file": "/etc/neutron/plugin.ini",
            "pattern": [],
            "symbolic_name": "neutron_plugin_ini"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/neutron/etc/neutron/plugin.ini",
            "pattern": [],
            "symbolic_name": "neutron_plugin_ini"
        },
        {
            "file": "/etc/zipl.conf",
            "pattern": [],
            "symbolic_name": "zipl_conf"
        },
        {
            "file": "/etc/smart_proxy_dynflow_core/settings.yml",
            "pattern": [
                ":database:"
            ],
            "symbolic_name": "smartpdc_settings"
        },
        {
            "file": "/var/log/neutron/l3-agent.log",
            "pattern": [
                "Duplicate iptables rule detected",
                "Error while deleting router"
            ],
            "symbolic_name": "neutron_l3_agent_log"
        },
        {
            "file": "/etc/neutron/metadata_agent.ini",
            "pattern": [
                "[",
                "auth_url"
            ],
            "symbolic_name": "neutron_metadata_agent_ini"
        },
        {
            "file": "/var/lib/config-data/puppet-generated/neutron/etc/neutron/metadata_agent.ini",
            "pattern": [
                "[",
                "auth_url"
            ],
            "symbolic_name": "neutron_metadata_agent_ini"
        },
        {
            "file": "/var/log/neutron/metadata-agent.log",
            "pattern": [
                "Unauthorized: {\"error\": {\"message\": \"The resource could not be found.\", \"code\": 404, \"title\": \"Not Found\"}}"
            ],
            "symbolic_name": "neutron_metadata_agent_log"
        },
        {
            "file": "/var/log/containers/neutron/metadata-agent.log",
            "pattern": [
                "Unauthorized: {\"error\": {\"message\": \"The resource could not be found.\", \"code\": 404, \"title\": \"Not Found\"}}"
            ],
            "symbolic_name": "neutron_metadata_agent_log"
        },
        {
            "file": "/var/log/neutron/openvswitch-agent.log",
            "pattern": [
                "Agent main thread died of an exception",
                "neutron.plugins.ml2.drivers.openvswitch.agent.openflow.native.ovs_ryuapp"
            ],
            "symbolic_name": "neutron_ovs_agent_log"
        },
        {
            "file": "/var/log/containers/neutron/openvswitch-agent.log",
            "pattern": [
                "Agent main thread died of an exception",
                "neutron.plugins.ml2.drivers.openvswitch.agent.openflow.native.ovs_ryuapp"
            ],
            "symbolic_name": "neutron_ovs_agent_log"
        },
        {
            "file": "/usr/sap/hostctrl/exe/host_profile",
            "pattern": [
                "DIR_",
                "IP_LOCAL_PORT_RANGE",
                "SAPSYSTEM",
                "reserved_port/enable",
                "reserved_port/range"
            ],
            "symbolic_name": "sap_host_profile"
        }
    ],
    "globs": [
        {
            "glob": "/sys/devices/system/cpu/cpu[0-9]*/online",
            "symbolic_name": "cpu_cores",
            "pattern": []
        },
        {
            "glob": "/sys/devices/system/cpu/cpu[0-9]*/topology/thread_siblings_list",
            "symbolic_name": "cpu_siblings",
            "pattern": []
        },
        {
            "glob": "/sys/devices/system/cpu/vulnerabilities/*",
            "symbolic_name": "cpu_vulns",
            "pattern": []
        },
        {
            "glob": "/var/opt/amq-broker/*/etc/broker.xml",
            "symbolic_name": "amq_broker",
            "pattern": []
        }
    ],
    "meta_specs": {
        "analysis_target": {
            "archive_file_name": "/insights_data/analysis_target"
        },
        "branch_info": {
            "archive_file_name": "/branch_info"
        },
        "machine-id": {
            "archive_file_name": "/insights_data/machine-id"
        },
        "metadata.json": {
            "archive_file_name": "metadata.json"
        },
        "uploader_log": {
            "archive_file_name": "/insights_data/insights_logs/insights.log"
        }
    },
    "pre_commands": {
        "iface": "/sbin/ip -o link | awk -F ': ' '/.*link\\/ether/ {print $2}'"
    },
    "version": "2018-09-20T14:13:03.933571"
}
